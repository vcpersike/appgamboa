@using AppGamboaSite.Shared.ViewModels
<div class="menu-wrapper">
    <MudFab Icon="@ToggleIcon" @onclick="ToggleMenu" Color="Color.Primary" Class="toggle-button" />
    <MudDrawer Open="@IsOpen" ClipMode="DrawerClipMode.Always" Elevation="1">
        <MudList T="MenuItemModel">
            @foreach (var item in MenuItems)
            {
                <MenuItemMud Icon="@item.Icon" Text="@item.Text" OnClick="() => NavigateTo(item.Route)" />
            }
        </MudList>
    </MudDrawer>
</div>

@code {
    [Inject]
    public SideMenuViewModel ViewModel { get; set; }

    [Inject]
    public IMenuService MenuService { get; set; }

    [Inject]
    public NavigationManager Navigation { get; set; }

    private bool IsOpen { get; set; } = true;
    private string ToggleIcon => IsOpen ? "chevron_left" : "chevron_right";

    private IEnumerable<MenuItemModel> MenuItems => ViewModel.MenuItems;

    protected override void OnInitialized()
    {
        ViewModel.MenuItems = MenuService.GetMenuItems();
    }

    private void NavigateTo(string route)
    {
        if (!string.IsNullOrEmpty(route))
        {
            Navigation.NavigateTo(route);
        }
    }

    private void ToggleMenu()
    {
        IsOpen = !IsOpen;
    }
}

